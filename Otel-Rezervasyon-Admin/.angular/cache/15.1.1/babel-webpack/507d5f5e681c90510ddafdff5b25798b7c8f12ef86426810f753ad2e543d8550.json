{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport { enviroment } from 'src/environments/enviroment';\nimport { Il } from '../models/Il';\nimport { Otel } from '../models/Otel';\nimport { OtelKullanici } from '../models/OtelKullanici';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/router\";\nexport class AppService {\n  constructor(http, router) {\n    this.http = http;\n    this.router = router;\n    this.kullanici = new BehaviorSubject(new OtelKullanici());\n    this.iller = new BehaviorSubject([new Il()]);\n    this.otel = new BehaviorSubject(new Otel());\n  }\n  login(otelKullanici) {\n    this.http.post(`${enviroment.api}/OtelKullanici/getOtelKullanici`, otelKullanici).subscribe(res => {\n      if (res.durum) {\n        console.log(res);\n        this.kullanici.next(res.data);\n        this.otel.next(res.data.otel);\n        localStorage.setItem('user', JSON.stringify(res.data));\n        localStorage.setItem('otel', JSON.stringify(res.data.otel));\n        this.router.navigate(['main', 'dashboard']);\n      } else {}\n    });\n  }\n  signup(otelKullanici) {\n    this.http.post(`${enviroment.api}/OtelKullanici/addOtelKullanici`, otelKullanici).subscribe(res => {\n      console.log(res);\n      this.router.navigate(['login']);\n    });\n  }\n  logout() {\n    localStorage.removeItem('user');\n    this.router.navigate(['login']);\n  }\n  isAuthanticated() {\n    const user = localStorage.getItem('user');\n    const otel = localStorage.getItem('otel');\n    if (user != null && otel != null) {\n      this.kullanici.next(JSON.parse(user));\n      this.otel.next(JSON.parse(otel));\n    }\n  }\n  updateOtel(otel) {\n    this.http.post(`${enviroment.api}/Otel/updateOtel`, otel).subscribe(res => console.log(res));\n  }\n  getOtel(id) {\n    this.http.post(`${enviroment.api}/Otel/getOtel`, {\n      otel: id\n    }).subscribe(res => {\n      if (res.durum) {\n        this.otel.next(res.data);\n        localStorage.setItem('otel', JSON.stringify(res.data.otel));\n      }\n    });\n  }\n  getIller() {\n    this.http.get(`${enviroment.api}/Il/getIller`).subscribe(res => {\n      this.iller.next(res.data);\n    });\n  }\n  uploadImg(file) {\n    const formData = new FormData();\n    console.log(file);\n    formData.append('otel', this.kullanici.getValue().otel._id.toString());\n    formData.append('image', file, file.name);\n    this.http.post(`${enviroment.api}/uploadImg`, formData).subscribe(() => this.getOtel(this.otel.value._id));\n  }\n}\nAppService.ɵfac = function AppService_Factory(t) {\n  return new (t || AppService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.Router));\n};\nAppService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AppService,\n  factory: AppService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"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","names":["BehaviorSubject","enviroment","Il","Otel","OtelKullanici","AppService","constructor","http","router","login","otelKullanici","post","api","subscribe","res","durum","console","log","kullanici","next","data","otel","localStorage","setItem","JSON","stringify","navigate","signup","logout","removeItem","isAuthanticated","user","getItem","parse","updateOtel","getOtel","id","getIller","get","iller","uploadImg","file","formData","FormData","append","getValue","_id","toString","name","value","factory","providedIn"],"sourceRoot":"","sources":["/Users/mohammadrezakhorasanchian/Development/Angular/Otel-Rezervasyon-Admin/src/app/services/App.service.ts"],"sourcesContent":["import { HttpClient } from '@angular/common/http';\nimport { Injectable, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { BehaviorSubject } from 'rxjs';\nimport { enviroment } from 'src/environments/enviroment';\nimport { Il } from '../models/Il';\nimport { Otel } from '../models/Otel';\nimport { OtelKullanici } from '../models/OtelKullanici';\n\n@Injectable({ providedIn: 'root' })\nexport class AppService {\n  kullanici = new BehaviorSubject<OtelKullanici>(new OtelKullanici());\n  iller = new BehaviorSubject<[Il]>([new Il()]);\n  otel = new BehaviorSubject<Otel>(new Otel());\n\n  constructor(private http: HttpClient, private router: Router) {}\n\n  login(otelKullanici: OtelKullanici) {\n    this.http\n      .post(`${enviroment.api}/OtelKullanici/getOtelKullanici`, otelKullanici)\n      .subscribe((res: any) => {\n        if (res.durum) {\n          console.log(res);\n          this.kullanici.next(res.data);\n          this.otel.next(res.data.otel);\n          localStorage.setItem('user', JSON.stringify(res.data));\n          localStorage.setItem('otel', JSON.stringify(res.data.otel));\n          this.router.navigate(['main', 'dashboard']);\n        } else {\n        }\n      });\n  }\n\n  signup(otelKullanici: OtelKullanici) {\n    this.http\n      .post(`${enviroment.api}/OtelKullanici/addOtelKullanici`, otelKullanici)\n      .subscribe((res) => {\n        console.log(res);\n        this.router.navigate(['login']);\n      });\n  }\n\n  logout() {\n    localStorage.removeItem('user');\n    this.router.navigate(['login']);\n  }\n\n  isAuthanticated() {\n    const user = localStorage.getItem('user');\n    const otel = localStorage.getItem('otel');\n    if (user != null && otel != null) {\n      this.kullanici.next(JSON.parse(user));\n      this.otel.next(JSON.parse(otel));\n    }\n  }\n\n  updateOtel(otel: Otel) {\n    this.http\n      .post(`${enviroment.api}/Otel/updateOtel`, otel)\n      .subscribe((res) => console.log(res));\n  }\n\n  getOtel(id: String) {\n    this.http\n      .post(`${enviroment.api}/Otel/getOtel`, { otel: id })\n      .subscribe((res: any) => {\n        if (res.durum) {\n          this.otel.next(res.data);\n          localStorage.setItem('otel', JSON.stringify(res.data.otel));\n        }\n      });\n  }\n\n  getIller() {\n    this.http.get(`${enviroment.api}/Il/getIller`).subscribe((res: any) => {\n      this.iller.next(res.data);\n    });\n  }\n\n  uploadImg(file: File) {\n    const formData = new FormData();\n    console.log(file);\n    formData.append('otel', this.kullanici.getValue().otel!._id!.toString());\n    formData.append('image', file, file.name);\n    this.http\n      .post(`${enviroment.api}/uploadImg`, formData)\n      .subscribe(() => this.getOtel(this.otel.value._id!));\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}